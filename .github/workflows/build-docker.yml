name: Build, Push, and Deploy Docker Image

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push to Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout frontend repository
      uses: actions/checkout@v4
      with:
        path: pansou-web

    - name: Checkout backend repository
      uses: actions/checkout@v4
      with:
        repository: granthuang999/pansou
        path: pansou

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./pansou-web
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy to Google Cloud
    runs-on: ubuntu-latest
    # [核心] 只有在 build-and-push 成功后，才运行此任务
    needs: build-and-push 

    steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to Server
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          echo ">>> Logged in to server"
          echo ">>> Pulling latest Docker image..."
          sudo docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          echo ">>> Stopping and removing old container..."
          # 增加 '|| true' 是为了在容器不存在时不报错
          sudo docker stop pansou || true 
          sudo docker rm pansou || true

          echo ">>> Starting new container..."
          sudo docker run -d --name pansou -p 80:80 --restart=always ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          echo "🎉 Deployment successful!"
        EOF
