name: Build, Push, and Deploy Docker Image

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push to Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    # 步骤1: 检出前端仓库 (pansou-web)
    - name: Checkout Frontend Repository
      uses: actions/checkout@v4

    # 步骤2: 检出后端仓库 (您自己的 pansou 仓库)
    - name: Checkout Backend Repository
      uses: actions/checkout@v4
      with:
        repository: granthuang999/pansou
        path: backend

    # 步骤3: 设置 Node.js 环境并构建前端
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: Install and Build Frontend
      run: |
        npm install
        npm run build

    # 步骤4: 设置 Go 环境并构建后端
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    - name: Build Backend
      working-directory: ./backend
      run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o pansou-amd64 .

    # 步骤5: 准备Docker构建上下文
    - name: Prepare Build Context
      run: |
        mkdir -p build-context
        cp -r dist/ build-context/frontend-dist
        cp backend/pansou-amd64 build-context/pansou-amd64
        cp Dockerfile build-context/
        cp start.sh build-context/
        # [核心] 复制您的SSL证书到构建上下文中
        cp -r certs/ build-context/certs

    # 步骤6: 登录到GitHub容器镜像库
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # 步骤7: 构建并推送Docker镜像
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./build-context
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy to Google Cloud
    runs-on: ubuntu-latest
    needs: build-and-push 

    steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to Server
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          echo ">>> Logged in to server"
          echo ">>> Pulling latest Docker image..."
          echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin
          sudo docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          echo ">>> Stopping and removing old container..."
          sudo docker stop pansou || true 
          sudo docker rm pansou || true

          echo ">>> Starting new container with DOMAIN variable..."
          # [核心] 注入DOMAIN环境变量，让start.sh知道为哪个域名生成HTTPS配置
          sudo docker run -d --name pansou -p 80:80 -p 443:443 --restart=always \
            -e DOMAIN=${{ secrets.DOMAIN_NAME }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          echo "🎉 Deployment successful!"
        EOF
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
