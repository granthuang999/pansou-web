name: Build, Push, and Deploy Docker Image

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push to Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    # 步骤1: 检出前端仓库 (pansou-web)
    - name: Checkout Frontend Repository
      uses: actions/checkout@v4

    # 步骤2: 检出后端仓库 (pansou) 到一个名为 "backend" 的子目录
    - name: Checkout Backend Repository
      uses: actions/checkout@v4
      with:
        repository: granthuang999/pansou
        path: backend

    # 步骤3: 登录到GitHub容器镜像库
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # 步骤4: [核心] 直接构建并推送Docker镜像
    # 我们将信任并使用您仓库中最新的Dockerfile来完成所有编译工作
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: . # 使用仓库根目录作为构建上下文
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy to Google Cloud
    runs-on: ubuntu-latest
    needs: build-and-push 

    steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to Server
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          echo ">>> Logged in to server"

          echo ">>> Pulling latest Docker image..."
          # [核心修正] 登录到您自己的私有镜像库
          echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin
          sudo docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          echo ">>> Stopping and removing old container..."
          sudo docker stop pansou || true 
          sudo docker rm pansou || true

          echo ">>> Starting new container..."
          sudo docker run -d --name pansou -p 80:80 -p 443:443 --restart=always ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          echo "🎉 Deployment successful!"
        EOF
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
